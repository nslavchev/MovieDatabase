[{"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\index.js":"1","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\App.js":"2","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\SignUp.js":"3","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\SignIn.js":"4","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\Home.js":"5","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\Navbar.js":"6","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\api.js":"7","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\AdminPanel.js":"8","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\CategoryForm.js":"9","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\MovieForm.js":"10","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\ArtistForm.js":"11","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\MovieDetail.js":"12","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\CreatableSelect.js":"13","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\userContext.js":"14"},{"size":171,"mtime":1610456481830,"results":"15","hashOfConfig":"16"},{"size":1707,"mtime":1611406354190,"results":"17","hashOfConfig":"16"},{"size":5662,"mtime":1610805986731,"results":"18","hashOfConfig":"16"},{"size":5460,"mtime":1611406111375,"results":"19","hashOfConfig":"16"},{"size":1968,"mtime":1611139525867,"results":"20","hashOfConfig":"16"},{"size":3186,"mtime":1611405878365,"results":"21","hashOfConfig":"16"},{"size":283,"mtime":1610712464138,"results":"22","hashOfConfig":"16"},{"size":1483,"mtime":1610809603036,"results":"23","hashOfConfig":"16"},{"size":2356,"mtime":1610876523924,"results":"24","hashOfConfig":"16"},{"size":18915,"mtime":1611406494215,"results":"25","hashOfConfig":"16"},{"size":4816,"mtime":1610977656114,"results":"26","hashOfConfig":"16"},{"size":3397,"mtime":1611162172284,"results":"27","hashOfConfig":"16"},{"size":1556,"mtime":1611223257371,"results":"28","hashOfConfig":"16"},{"size":85,"mtime":1611404987311,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1u9nbi1",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\index.js",[],["66","67"],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\App.js",[],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\SignUp.js",[],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\SignIn.js",["68","69","70"],"import React, { useState, useContext } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {userContext} from \"../userContext\";\r\nimport axios from 'axios';\r\n\r\nfunction SignIn() {\r\n    const {auth, admin} = useContext(userContext);\r\n    const [checkAuthStatus, setAuthStatus] = auth;\r\n\r\n    const [userDetails, setUserDetails] = useState({\r\n        email: '',\r\n        password: '',\r\n        message: ''\r\n    });\r\n\r\n    const formValues = (event) => {\r\n        setUserDetails({\r\n            ...userDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const signIn = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const body = JSON.stringify({\r\n                email: userDetails.email,\r\n                password: userDetails.password\r\n            });\r\n\r\n            const response = await axios.post(\"/api/signin\", body, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            setAuthStatus(true);\r\n\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            if (error.response.status === 401) {\r\n                console.log(\"Wrong credentials!\");\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\r\n            <div className=\"max-w-md w-full\">\r\n                <div>\r\n                    <h2 className=\"mt-6 text-center text-3xl leading-9 font-extrabold text-gray-900\">\r\n                        Sign in to your account\r\n                    </h2>\r\n                </div>\r\n                <form className=\"mt-8\" action=\"#\" method=\"POST\" onSubmit={signIn}>\r\n                    <input type=\"hidden\" name=\"remember\" value=\"true\" />\r\n                    <div className=\"rounded-md shadow-sm\">\r\n                        <div>\r\n                            <input aria-label=\"Email address\" name=\"email\" type=\"email\" required\r\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                                placeholder=\"Email address\" onChange={formValues} />\r\n                        </div>\r\n                        <div className=\"-mt-px\">\r\n                            <input aria-label=\"Password\" name=\"password\" type=\"password\" required\r\n                                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:shadow-outline-blue focus:border-blue-300 focus:z-10 sm:text-sm sm:leading-5\"\r\n                                placeholder=\"Password\" onChange={formValues} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-6 flex items-center justify-between\">\r\n                        <div className=\"flex items-center\">\r\n                            <input id=\"remember_me\" type=\"checkbox\"\r\n                                className=\"form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out\" />\r\n                            <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm leading-5 text-gray-900\">\r\n                                Remember me\r\n                            </label>\r\n                        </div>\r\n\r\n                        <div className=\"text-sm leading-5\">\r\n                            <Link to=\"/forgotpassword\"\r\n                                className=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\r\n                                Forgot your password?\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"text-sm leading-5\">\r\n                            <Link to=\"/signup\"\r\n                                className=\"font-medium text-indigo-600 hover:text-indigo-500 focus:outline-none focus:underline transition ease-in-out duration-150\">\r\n                                Not a member?\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-6\">\r\n                        <button type=\"submit\"\r\n                            className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm leading-5 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:border-indigo-700 focus:shadow-outline-indigo active:bg-indigo-700 transition duration-150 ease-in-out\">\r\n                            <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\r\n                                <svg className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-400 transition ease-in-out duration-150\"\r\n                                    fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                                </svg>\r\n                            </span>\r\n                            Sign in\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SignIn;","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\Home.js",["71"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n//import {checkAuthentication} from '../api';\r\n\r\nfunction Home() {\r\n    /* const isLoggedIn = checkAuthentication(); \r\n    console.log(isLoggedIn); */\r\n    const [movies, setMovies] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/getmovies').then((response) => {\r\n            console.log(response.data.movies);\r\n            setMovies(response.data.movies);\r\n        })\r\n    }, []);\r\n\r\n    const loadMovies = movies.length > 0 && movies.map((movie) => {\r\n        return (\r\n            <div class=\"container row-span-3 col-span-2\">\r\n                <div class=\"flex flex-wrap -mx-1 lg:-mx-4\" />\r\n                <div class=\"my-1 px-1 w-full md:w-1/2 lg:my-4 lg:px-4 lg:w-1/3\"/>\r\n                <article class=\"overflow-hidden rounded-lg shadow-lg\">\r\n                    <img alt=\"Placeholder\" class=\"block h-auto w-full\" src={movie.posterUrl} />\r\n\r\n                    <header class=\"flex items-center justify-between leading-tight p-2 md:p-4\">\r\n                        <h1 class=\"text-black text-lg\">\r\n                            {movie.title}\r\n                        </h1>\r\n\r\n\r\n                        <p class=\"text-grey-darker text-sm\">\r\n                            Rating: {movie.rating}/10\r\n                        </p>\r\n\r\n                        <button onClick={() => history.push({ pathname: '/moviedetail', state: { movie: movie } })}>Details</button>\r\n                    </header>\r\n                </article>\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div class=\"mx-20 my-20 grid grid-rows-6 grid-cols-6 gap-4\">\r\n                {loadMovies}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\Navbar.js",["72"],"import { React, useEffect, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {userContext} from \"../userContext\"\r\nimport axios from \"axios\";\r\nimport { checkAdmin, checkAuthentication } from \"../api\";\r\n\r\nfunction Navbar() {\r\n    const history = useHistory();\r\n    const {auth, admin} = useContext(userContext);\r\n    const [checkAuthStatus, setAuthStatus] = auth;\r\n    const [checkAdminStatus, setAdminStatus] = admin;\r\n    var comp;\r\n    var adminButton = <Link to={'/adminpanel'}className=\"px-3 py-2 rounded-md text-sm font-medium text-white bg-gray-900 hover:text-white hover:bg-gray-700\">Admin Panel</Link>\r\n\r\n    useEffect(() => {\r\n        const getAuthStatus = async () => {\r\n            const result = await checkAuthentication();\r\n            setAuthStatus(result.data);\r\n        }\r\n\r\n        const getAdminStatus = async () => {\r\n            const result = await checkAdmin();\r\n            setAdminStatus(result.data);\r\n        }\r\n\r\n        getAuthStatus();\r\n        getAdminStatus();\r\n    }, []);\r\n\r\n    if(checkAuthStatus){\r\n        comp = <div className=\"ml-10 flex items-baseline space-x-4\">\r\n        <p\r\n            className=\"px-3 py-2 rounded-md text-lg font-medium text-gray-300 \">Movies Database\r\n        </p>\r\n        <Link to={'/'}\r\n            className=\"px-3 py-2 rounded-md text-sm font-medium text-white bg-gray-900 hover:text-white hover:bg-gray-700\">Movies\r\n        </Link>\r\n        <Link to={'/'}\r\n            className=\"px-3 py-2 rounded-md text-sm font-medium text-white bg-gray-900 hover:text-white hover:bg-gray-700\">User Reviews\r\n        </Link>\r\n        {checkAdminStatus ? adminButton : null}\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"bg-gray-800\">\r\n                <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n                    <div className=\"flex items-center justify-between h-16\">\r\n                        <div className=\"flex items-center\">\r\n                            <div id=\"1\" className=\"hidden md:block\">\r\n                                {comp}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <button onClick={async () => {\r\n                                if(checkAuthStatus){\r\n                                    await axios.post(\"/api/signout\", {\r\n                                        headers: {\r\n                                            'Content-Type': 'application/json',\r\n                                        }\r\n                                    });\r\n                                    setAuthStatus(false);\r\n                                }\r\n                                history.push(\"/signin\");\r\n                            }}\r\n                                className=\"px-3 py-2 rounded-md text-sm font-medium text-white bg-gray-900 hover:text-white hover:bg-gray-700\">{checkAuthStatus === null ? '' : checkAuthStatus ? 'Sign Out' : 'Sign In'}\r\n                            </button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\api.js",[],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\AdminPanel.js",[],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\CategoryForm.js",[],["73","74"],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\MovieForm.js",["75","76"],"import { React, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from 'react-select'\r\nimport CreatableSelect from 'react-select/creatable'\r\n\r\nfunction MovieForm() {\r\n    const formFieldsInitalState = {\r\n        title: '',\r\n        genre: '',\r\n        producers: '',\r\n        productionDate: '',\r\n        actors: [],\r\n        awards: [],\r\n        language: '',\r\n        rating: '',\r\n        posterUrl: '',\r\n        trailerUrl: '',\r\n        country: '',\r\n        ratingIMDB: '',\r\n        description: ''\r\n    }\r\n\r\n    const characterDetailsInitialState = {\r\n        character: '',\r\n        actorForCharacter: ''\r\n    }\r\n\r\n    const [formFields, setFormFields] = useState(formFieldsInitalState);\r\n    const [actors, setActors] = useState([]);\r\n    const [producers, setProducers] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [characters, setCharacters] = useState([]);\r\n    const [characterDetails, setCharacterDetails] = useState(characterDetailsInitialState);\r\n    const [selectedActors, setSelectedActors] = useState([]);\r\n    const [selectedAwards, setSelectedAwards] = useState([]);\r\n    const [keywords, setKeywords] = useState([]);\r\n\r\n    const handleKeywordsChange = (e) => {\r\n        console.log(e)\r\n        setKeywords(Array.isArray(e) ? e.map(x => x.value) : []);\r\n        console.log(keywords);\r\n    }\r\n\r\n    const handleActorsChange = (e) => {\r\n        setSelectedActors(Array.isArray(e) ? e.map(x => x.value) : []);\r\n        console.log(selectedActors);\r\n    }\r\n\r\n    const handleAwardsChange = (e) => {\r\n        setSelectedAwards(Array.isArray(e) ? e.map(x => x.value) : []);\r\n        console.log(selectedAwards);\r\n    }\r\n\r\n    var actorOptions = [];\r\n\r\n    const awardsOptions = [{ value: \"Academy Award\", label: \"Academy Award\" }, { value: \"Golden Globe\", label: \"Golden Globe\" },\r\n    { value: \"Emmy Award\", label: \"Emmy Award\" }, { value: \"Grammy Award\", label: \"Grammy Award\" },\r\n    { value: \"American Music Award\", label: \"American Music Award\" }, { value: \"Blockbuster Entertainment Awards\", label: \"Blockbuster Entertainment Awards\" },\r\n    { value: \"Blue Ribbon Award\", label: \"Blue Ribbon Award\" }, { value: \"Empire Award\", label: \"Empire Award\" },\r\n    { value: \"Golden Rooster Award\", label: \"Golden Rooster Award\" }, { value: \"Golden Screen Award\", label: \"Golden Screen Award\" }]\r\n\r\n    const formCharacterValues = (event) => {\r\n        setCharacterDetails({\r\n            ...characterDetails,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const formValues = (event) => {\r\n        setFormFields({\r\n            ...formFields,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    };\r\n\r\n    const submitMovie = async (event) => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            const body = JSON.stringify({\r\n                title: formFields.title,\r\n                genre: formFields.genre,\r\n                producers: formFields.producers,\r\n                productionDate: formFields.productionDate,\r\n                actors: selectedActors,\r\n                awards: selectedAwards,\r\n                language: formFields.language,\r\n                characters: characters,\r\n                rating: formFields.rating,\r\n                posterUrl: formFields.posterUrl === '' ? 'https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/movies-to-watch-1585258004.jpg' : formFields.posterUrl,\r\n                trailerUrl: formFields.trailerUrl === '' ? 'https://www.youtube.com/watch?v=EHXqb-vACOQ' : formFields.trailerUrl,\r\n                country: formFields.country,\r\n                ratingIMDB: formFields.ratingIMDB,\r\n                description: formFields.description\r\n            });\r\n\r\n            const response = await axios.post(\"/api/addmovie\", body, {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n\r\n            if (response.data.success) {\r\n                alert(\"Стана шефе\");\r\n            } else {\r\n                console.log(response.data.reason);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n        setFormFields(formFieldsInitalState);\r\n        setCharacters([]);\r\n        setSelectedActors([]);\r\n        setSelectedAwards([]);\r\n    };\r\n\r\n    const addToCharacterArray = (e) => {\r\n        e.preventDefault()\r\n        setCharacters([...characters, { character: characterDetails.character, playedBy: characterDetails.actorForCharacter }]);\r\n        console.log(characters);\r\n\r\n        setCharacterDetails(characterDetailsInitialState);\r\n    };\r\n\r\n    useEffect(() => {\r\n        axios.get('/api/getactors').then((response) => {\r\n            setActors(response.data.actors);\r\n        })\r\n        axios.get('/api/getproducers').then((response) => {\r\n            setProducers(response.data.producers);\r\n        })\r\n        axios.get('/api/getcategories').then((response) => {\r\n            setCategories(response.data.categories);\r\n        })\r\n    }, []);\r\n\r\n    actors.forEach(actor => { actorOptions.push({ value: actor.firstName + \" \" + actor.lastName, label: actor.firstName + \" \" + actor.lastName }) })\r\n\r\n    const allProducers = producers.length > 0 && producers.map((producer) => {\r\n        return (\r\n            <option>{producer.firstName + \" \" + producer.lastName}</option>\r\n        );\r\n    });\r\n    const allCategories = categories.length > 0 && categories.map((category) => {\r\n        return (\r\n            <option>{category.genre}</option>\r\n        );\r\n    });\r\n\r\n    const availableActors = selectedActors.map((str) => {\r\n        return (\r\n            <option>{str}</option>\r\n        );\r\n    });\r\n\r\n    const components = {\r\n        DropdownIndicator: null,\r\n    };\r\n\r\n    const createOption = (label) => ({\r\n        label,\r\n        value: label,\r\n    });\r\n\r\n    const[value, setValue] = useState([]);\r\n    const[inputValue, setInputValue] = useState([]);\r\n\r\n    const handleChange = (value, actionMeta) => {\r\n        console.group('Value Changed');\r\n        console.log(value);\r\n        console.log(\"keywords\");\r\n        console.log(`action: ${actionMeta.action}`);\r\n        console.groupEnd();\r\n        setValue(value);\r\n    };\r\n\r\n    const handleInputChange = (inputValue) => {\r\n        setInputValue(inputValue);\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (!inputValue) return;\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case 'Tab':\r\n                console.group('Value Added');\r\n                console.log(value);\r\n                console.groupEnd();\r\n                setInputValue('')\r\n                setValue([...value, createOption(inputValue)]);\r\n                setKeywords(Array.isArray(value) ? value.map(x => x.value) : []);\r\n                console.log(keywords)\r\n                event.preventDefault();\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div class=\"mt-10 sm:mt-0\" >\r\n            <div class=\"mt-5 md:mt-0 md:col-span-2\">\r\n                <form action=\"#\" method=\"POST\" onSubmit={submitMovie}>\r\n                    <div class=\"shadow overflow-hidden sm:rounded-md\">\r\n                        <div class=\"px-4 py-5 bg-white sm:p-6\">\r\n                            <div class=\"grid grid-cols-6 gap-6\">\r\n                                <div class=\"col-span-6 sm:col-span-3\">\r\n                                    <label for=\"title\" class=\"block text-sm font-medium text-gray-700\">Title</label>\r\n                                    <input value={formFields.title} onChange={formValues} type=\"text\" name=\"title\" id=\"title\" autocomplete=\"given-name\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3\">\r\n                                    <label for=\"genre\" class=\"block text-sm font-medium text-gray-700\">Choose a category</label>\r\n                                    <select value={formFields.genre} onChange={formValues} id=\"genre\" name=\"genre\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n                                        <option hidden>Genre</option>\r\n                                        {allCategories}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3\">\r\n                                    <label for=\"producers\" class=\"block text-sm font-medium text-gray-700\">Choose a producer</label>\r\n                                    <select value={formFields.producers} onChange={formValues} id=\"producers\" name=\"producers\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n                                        <option hidden>Select a producer</option>\r\n                                        {allProducers}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3\">\r\n                                    <label for=\"productionDate\" class=\"block text-sm font-medium text-gray-700\">Production Date</label>\r\n                                    <input value={formFields.productionDate} onChange={formValues} type=\"date\" name=\"productionDate\" id=\"productionDate\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6\">\r\n                                    <label for=\"actors\" class=\"block text-sm font-medium text-gray-700\">Select actors for the movie:</label>\r\n                                    <Select\r\n                                        //todo\r\n                                        value={actorOptions.filter(obj => selectedActors.includes(obj.value))}\r\n                                        name=\"actors\"\r\n                                        id=\"actors\"\r\n                                        options={actorOptions}\r\n                                        onChange={handleActorsChange}\r\n                                        isMulti\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6\">\r\n                                    <label for=\"awards\" class=\"block text-sm font-medium text-gray-700\">Select awards for the movie:</label>\r\n                                    <Select\r\n                                        //todo\r\n                                        value={awardsOptions.filter(obj => selectedAwards.includes(obj.value))}\r\n                                        name=\"awards\"\r\n                                        options={awardsOptions}\r\n                                        onChange={handleAwardsChange}\r\n                                        isMulti\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6\">\r\n                                    <label for=\"keywords\" class=\"block text-sm font-medium text-gray-700\">Add keywords for the movie:</label>\r\n                                    <CreatableSelect\r\n                                        name=\"keywords\"\r\n                                        components={components}\r\n                                        inputValue={inputValue}\r\n                                        isClearable\r\n                                        isMulti\r\n                                        menuIsOpen={false}\r\n                                        onChange={handleChange}\r\n                                        onInputChange={handleInputChange}\r\n                                        onKeyDown={handleKeyDown}\r\n                                        placeholder=\"Enter a keyword and press enter...\"\r\n                                        value={value}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"language\" class=\"block text-sm font-medium text-gray-700\">Language</label>\r\n                                    <input value={formFields.language} onChange={formValues} type=\"text\" name=\"language\" id=\"language\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"rating\" class=\"block text-sm font-medium text-gray-700\">Rating</label>\r\n                                    <input value={formFields.rating} onChange={formValues} type=\"number\" name=\"rating\" id=\"rating\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"posterUrl\" class=\"block text-sm font-medium text-gray-700\">Poster URL</label>\r\n                                    <input value={formFields.posterUrl} onChange={formValues} type=\"text\" name=\"posterUrl\" id=\"posterUrl\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"trailerUrl\" class=\"block text-sm font-medium text-gray-700\">Trailer URL</label>\r\n                                    <input value={formFields.trailerUrl} onChange={formValues} type=\"text\" name=\"trailerUrl\" id=\"trailerUrl\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"country\" class=\"block text-sm font-medium text-gray-700\">Country</label>\r\n                                    <input value={formFields.country} onChange={formValues} type=\"text\" name=\"country\" id=\"country\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-3 lg:col-span-2\">\r\n                                    <label for=\"ratingIMDB\" class=\"block text-sm font-medium text-gray-700\">IMDB Rating</label>\r\n                                    <input value={formFields.ratingIMDB} onChange={formValues} type=\"number\" name=\"ratingIMDB\" id=\"ratingIMDB\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6\">\r\n                                    <label for=\"description\" class=\"block text-sm font-medium text-gray-700\">Description</label>\r\n                                    <textarea value={formFields.description} onChange={formValues} type=\"text\" name=\"description\" id=\"description\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6 lg:col-span-2\">\r\n                                    <label for=\"character\" class=\"block text-sm font-medium text-gray-700\">Character</label>\r\n                                    <input onChange={formCharacterValues} value={characterDetails.character} type=\"text\" name=\"character\" id=\"character\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" />\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6 lg:col-span-2\">\r\n                                    <label for=\"actorForCharacter\" class=\"block text-sm font-medium text-gray-700\">Choose actor</label>\r\n                                    <select onChange={formCharacterValues} value={characterDetails.actorForCharacter} id=\"actorForCharacter\" name=\"actorForCharacter\" class=\"mt-1 block w-full py-2 px-3 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\r\n                                        <option hidden>Played By</option>\r\n                                        {availableActors}\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div class=\"col-span-6 sm:col-span-6 lg:col-span-2\">\r\n                                    <label for=\"addCharacter\" class=\"block text-sm font-medium text-gray-700\">Add to the map</label>\r\n                                    <button onClick={addToCharacterArray} name=\"addCharacter\" id=\"addCharacter\" class=\"mt-1 block w-full py-2 px-3 border text-white bg-indigo-600 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">Add Character</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\r\n                            <button type=\"submit\" class=\"inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\r\n                                Save\r\n                                </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieForm;",["77","78"],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\ArtistForm.js",[],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\MovieDetail.js",["79","80","81","82","83"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nfunction MovieDetail() {\r\n    const location = useLocation();\r\n    const movie = location.state.movie;\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div class=\"max-w-sm bg-gray-100 shadow-lg rounded-lg overflow-hidden my-4 content-center mx-auto\">\r\n                <img class=\"w-full h-56 object-scale-down object-center\" src={movie.posterUrl} alt=\"avatar\" />\r\n                <div class=\"py-4 px-6\">\r\n                    <p class=\"py-2 text-lg text-gray-700 flex\">{movie.title}</p>\r\n                    <p class=\"py-2 text-lg text-gray-700\">{movie.description}</p>\r\n                    <div class=\"flex items-center mt-4 text-gray-700\">\r\n                        <svg class=\"h-6 w-6 fill-current\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M239.208 343.937c-17.78 10.103-38.342 15.876-60.255 15.876-21.909 0-42.467-5.771-60.246-15.87C71.544 358.331 42.643 406 32 448h293.912c-10.639-42-39.537-89.683-86.704-104.063zM178.953 120.035c-58.479 0-105.886 47.394-105.886 105.858 0 58.464 47.407 105.857 105.886 105.857s105.886-47.394 105.886-105.857c0-58.464-47.408-105.858-105.886-105.858zm0 186.488c-33.671 0-62.445-22.513-73.997-50.523H252.95c-11.554 28.011-40.326 50.523-73.997 50.523z\" /><g><path d=\"M322.602 384H480c-10.638-42-39.537-81.691-86.703-96.072-17.781 10.104-38.343 15.873-60.256 15.873-14.823 0-29.024-2.654-42.168-7.49-7.445 12.47-16.927 25.592-27.974 34.906C289.245 341.354 309.146 364 322.602 384zM306.545 200h100.493c-11.554 28-40.327 50.293-73.997 50.293-8.875 0-17.404-1.692-25.375-4.51a128.411 128.411 0 0 1-6.52 25.118c10.066 3.174 20.779 4.862 31.895 4.862 58.479 0 105.886-47.41 105.886-105.872 0-58.465-47.407-105.866-105.886-105.866-37.49 0-70.427 19.703-89.243 49.09C275.607 131.383 298.961 163 306.545 200z\" /></g>\r\n                        </svg>\r\n                        <h1 class=\"px-2 text-sm\">{movie.actors}</h1>\r\n                    </div>\r\n                    <div class=\"flex items-center mt-4 text-gray-700\">\r\n                        <svg class=\"h-6 w-6 fill-current\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M256 32c-88.004 0-160 70.557-160 156.801C96 306.4 256 480 256 480s160-173.6 160-291.199C416 102.557 344.004 32 256 32zm0 212.801c-31.996 0-57.144-24.645-57.144-56 0-31.357 25.147-56 57.144-56s57.144 24.643 57.144 56c0 31.355-25.148 56-57.144 56z\" />\r\n                        </svg>\r\n                        <h1 class=\"px-2 text-sm\">{movie.country}</h1>\r\n                    </div>\r\n                    <div class=\"flex items-center mt-4 text-gray-700\">\r\n                        <svg class=\"h-6 w-6 fill-current\" viewBox=\"0 0 512 512\">\r\n                            <path d=\"M437.332 80H74.668C51.199 80 32 99.198 32 122.667v266.666C32 412.802 51.199 432 74.668 432h362.664C460.801 432 480 412.802 480 389.333V122.667C480 99.198 460.801 80 437.332 80zM432 170.667L256 288 80 170.667V128l176 117.333L432 128v42.667z\" />\r\n                        </svg>\r\n                        <h1 class=\"px-2 text-sm\">patterson@example.com</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MovieDetail;","C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\components\\CreatableSelect.js",["84"],"C:\\Users\\kokim\\OneDrive\\Desktop\\movie-database\\movie-database\\client\\src\\userContext.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":8,"column":18,"nodeType":"91","messageId":"92","endLine":8,"endColumn":23},{"ruleId":"89","severity":1,"message":"93","line":9,"column":12,"nodeType":"91","messageId":"92","endLine":9,"endColumn":27},{"ruleId":"89","severity":1,"message":"94","line":33,"column":19,"nodeType":"91","messageId":"92","endLine":33,"endColumn":27},{"ruleId":"89","severity":1,"message":"95","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":28,"column":8,"nodeType":"98","endLine":28,"endColumn":10,"suggestions":"99"},{"ruleId":"85","replacedBy":"100"},{"ruleId":"87","replacedBy":"101"},{"ruleId":"89","severity":1,"message":"102","line":38,"column":11,"nodeType":"91","messageId":"92","endLine":38,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":184,"column":9,"nodeType":"105","messageId":"106","endLine":195,"endColumn":10},{"ruleId":"85","replacedBy":"107"},{"ruleId":"87","replacedBy":"108"},{"ruleId":"89","severity":1,"message":"109","line":2,"column":8,"nodeType":"91","messageId":"92","endLine":2,"endColumn":13},{"ruleId":"89","severity":1,"message":"110","line":3,"column":10,"nodeType":"91","messageId":"92","endLine":3,"endColumn":19},{"ruleId":"89","severity":1,"message":"111","line":3,"column":21,"nodeType":"91","messageId":"92","endLine":3,"endColumn":29},{"ruleId":"89","severity":1,"message":"112","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":20},{"ruleId":"89","severity":1,"message":"95","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":14},{"ruleId":"103","severity":1,"message":"104","line":35,"column":5,"nodeType":"105","messageId":"106","endLine":46,"endColumn":6},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'admin' is assigned a value but never used.","Identifier","unusedVar","'checkAuthStatus' is assigned a value but never used.","'response' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setAdminStatus' and 'setAuthStatus'. Either include them or remove the dependency array.","ArrayExpression",["115"],["113"],["114"],"'handleKeywordsChange' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["113"],["114"],"'axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [setAdminStatus, setAuthStatus]",{"range":"118","text":"119"},[1039,1041],"[setAdminStatus, setAuthStatus]"]